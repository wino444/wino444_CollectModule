
-- CONFIG ‚öôÔ∏è
local CONFIG = {
    PreventDuplicateRunLoader = true  -- ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏£‡∏±‡∏ô‡∏ã‡πâ‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Loader üö´
}

-- Table ‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏£‡∏±‡∏ô‡∏ã‡πâ‡∏≥‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô üìã
local SupportPreventDuplicate = {
    New = false,  -- ‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á üö´
    Old = false,  -- ‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á üö´
    Dev = true    -- ‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á ‚úÖ
}

-- ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏£‡∏±‡∏ô‡∏ã‡πâ‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Loader üìõ
if _G.CollectModuleInstalled then
    print("[CollectModule Loader V2.0.1] Module already installed! Skipping load. üö´")
    return
elseif _G.CollectLoaderLoaded then
    if CONFIG.PreventDuplicateRunLoader then
        print("[CollectModule Loader V2.0.1] Script already loaded! Skipping duplicate run. üö´")
        return
    else
        print("[CollectModule Loader V2.0.1] Duplicate run allowed, resetting... ‚ôªÔ∏è")
        if _G.CollectModule then
            local ok, err = pcall(function()
                if _G.CollectModule.ResetModule then
                    _G.CollectModule.ResetModule()
                end
            end)
            if not ok then
                print("[CollectModule Loader V2.0.1] Reset error:", err, "üî¥")
            end
            _G.CollectModule = nil
        end
    end
end

-- SERVICES üåê
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- ‡πÇ‡∏´‡∏°‡∏î‡∏õ‡∏Å‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏≠‡∏á
local Mode = "New"  -- "Old" / "New" / ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å override ‡∏ñ‡πâ‡∏≤ user ‡∏û‡∏¥‡πÄ‡∏®‡∏©

-- ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î Dev Mode (‡πÅ‡∏°‡πâ‡∏à‡∏∞‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô DevUsers ‡∏Å‡πá‡∏ï‡∏≤‡∏°)
local EnableDevMode = true  -- true = ‡πÄ‡∏õ‡∏¥‡∏î, false = ‡∏õ‡∏¥‡∏î

-- ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô
local Links = {  
    New = "https://raw.githubusercontent.com/wino444/wino444_CollectModule/main/CollectModule_New.lua",  
    Old = "https://raw.githubusercontent.com/wino444/wino444_CollectModule/main/CollectModule_Old.lua",  
    Dev = "https://raw.githubusercontent.com/wino444/wino444_CollectModule/main/CollectModule_Dev.lua"  
}

-- ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏ä‡πâ Dev
local DevUsers = {
    ["ojhvhknhj"] = true,
    ["AniF_Xx"] = false  -- ‡πÄ‡∏û‡∏¥‡πà‡∏° AniF_Xx ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÇ‡∏´‡∏°‡∏î Dev ‚úÖ
}

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô debugPrint üñ•Ô∏è
local function debugPrint(...)
    print("[CollectModule Loader V2.0.1] üöÄ", ...)
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î Module
local function LoadModule(mode)
    local url = Links[mode]
    if not url then
        debugPrint("‚ùå ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏°‡∏î:", mode)
        return nil
    end

    local success, response = pcall(function()
        return game:HttpGet(url, 10) -- ‡πÄ‡∏û‡∏¥‡πà‡∏° timeout 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    end)

    if not success then
        debugPrint("‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", response)
        return nil
    end

    local moduleFunc, loadErr = loadstring(response)
    if not moduleFunc then
        debugPrint("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", loadErr)
        return nil
    end

    local ok, module = pcall(moduleFunc)
    if not ok then
        debugPrint("‚ùå Module ‡∏°‡∏µ error ‡∏ï‡∏≠‡∏ô‡∏£‡∏±‡∏ô:", module)
        return nil
    end

    debugPrint("‚úÖ ‡πÇ‡∏´‡∏•‡∏î", mode, "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
    return module
end

-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô DevUser + DevMode ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏´‡∏°
if EnableDevMode and DevUsers[LocalPlayer.Name] then
    Mode = "Dev"
    debugPrint("[Dev] üöß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö")
elseif DevUsers[LocalPlayer.Name] then
    debugPrint("[Dev] ‚ö†Ô∏è DevUser ‡πÅ‡∏ï‡πà DevMode ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà ‚Äì ‡πÉ‡∏ä‡πâ‡πÇ‡∏´‡∏°‡∏î‡∏õ‡∏Å‡∏ï‡∏¥")
end

-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö PreventDuplicateRun ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö CONFIG ‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
if CONFIG.PreventDuplicateRunLoader and not SupportPreventDuplicate[Mode] then
    debugPrint("‚ö†Ô∏è ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô", Mode, "‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö PreventDuplicateRun ‚Äì ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢!")
    CONFIG.PreventDuplicateRunLoader = false
end

-- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏•‡∏î
local CollectModule = LoadModule(Mode)
if CollectModule then
    _G.CollectModule = CollectModule  -- ‡∏ï‡∏±‡πâ‡∏á global ‡πÄ‡∏û‡∏∑‡πà‡∏≠ sync ‡∏Å‡∏±‡∏ö AutoCollect
    _G.CollectModuleInstalled = true  -- ‡∏ï‡∏±‡πâ‡∏á flag ‡∏ß‡πà‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    debugPrint("üöÄ Module ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô! Version:", CollectModule.GetVersion and CollectModule.GetVersion() or "Unknown")
else
    debugPrint("‚ùå ‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î Module ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß!")
end

-- ‡∏ï‡∏±‡πâ‡∏á flag ‡∏ß‡πà‡∏≤ loader ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß
_G.CollectLoaderLoaded = true

-- ‡πÅ‡∏™‡∏î‡∏á table ‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÉ‡∏ô log ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô üìä
debugPrint("SupportPreventDuplicate Table: New =", SupportPreventDuplicate.New and "‚úÖ" or "üö´", ", Old =", SupportPreventDuplicate.Old and "‚úÖ" or "üö´", ", Dev =", SupportPreventDuplicate.Dev and "‚úÖ" or "üö´")
debugPrint("Loader loaded successfully! Prevent Duplicate Run:", CONFIG.PreventDuplicateRunLoader and "On üö´" or "Off ‚ôªÔ∏è", "Module Installed:", _G.CollectModuleInstalled and "Yes ‚úÖ" or "No üö´")
